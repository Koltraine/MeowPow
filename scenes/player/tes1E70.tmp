[gd_scene load_steps=3 format=3 uid="uid://vsviyhoyhnpu"]

[sub_resource type="GDScript" id="GDScript_twcaf"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0

@onready var cat: Polygon2D = $Polygon2D
@onready var witch: Polygon2D = $Witch/Polygon2D


func _physics_process(_delta: float) -> void:

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		cat.visible = !cat.visible
		witch.visible = !witch.visible


	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CircleShape2D" id="CircleShape2D_0up0j"]

[node name="Test" type="CharacterBody2D"]
script = SubResource("GDScript_twcaf")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_0up0j")

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="."]
remote_path = NodePath("../Witch")

[node name="Polygon2D" type="Polygon2D" parent="."]
polygon = PackedVector2Array(-5, 3, -3, -4, 5, -1, 3, 5)

[node name="Witch" type="CharacterBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Witch"]
shape = SubResource("CircleShape2D_0up0j")

[node name="Polygon2D" type="Polygon2D" parent="Witch"]
position = Vector2(1, -4)
color = Color(1, 0, 1, 1)
polygon = PackedVector2Array(-5, 3, -3, -4, 5, -1, 3, 5)
